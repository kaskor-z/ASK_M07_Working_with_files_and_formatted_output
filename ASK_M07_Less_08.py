


def custom_write(file_name, strings):
    """
    Создайте функцию custom_write(file_name, strings),
которая принимает аргументы file_name - название файла для записи,
strings - список строк для записи.
    Функция должна:
Записывать в файл file_name все строки из списка strings, каждая на новой строке.
Возвращать словарь strings_positions, где:
    - ключом будет кортеж (<номер строки>, <байт начала строки>), а
    - значением - записываемая строка.
    Для получения номера байта начала строки используйте метод tell() перед записью.
    """
    string_list_1 = []; string_list_2 = []; n_str_ = 0
    file = open(file_name, 'w+')    # mode = 'w+' Режим «w+» открывает файл на чтение и запись.
                                    # Если файл существует, он будет очищен перед записью.
                                    # Если файл не существует, он будет создан.
    for item in strings:
        item_tuple_ = []
        n_str_ += 1; item_tuple_.append(n_str_)
        n_byt_ = file.tell(); item_tuple_.append(n_byt_)
        string_list_1.append(tuple(item_tuple_))   # item_tuple_)
        string_list_2.append(item)
        file.write(item + '\n')
    strings_positions = dict(zip(string_list_1, string_list_2))
    """
    Функция zip() используется для совмещения двух и более списков в один. 
Она возвращает итератор кортежей, где i-ый кортеж содержит i-ый элемент из каждого из переданных списков.

ПРИМЕР кода: 
    x = [1, 2, 3]
    y = [4, 5, 6]
    zipped = zip(x, y)
    print(list(zipped)) 
        # Выведет: [(1, 4), (2, 5), (3, 6)]
-----------------------------------------------
    Также функция zip() может быть использована для «расстегивания» списка кортежей обратно 
в отдельные списки. Для этого используется оператор «*». Он позволяет преобразовать список 
в набор аргументов для функции.

ПРИМЕР кода:
    zipped = [(1, 4), (2, 5), (3, 6)]
    x, y = zip(*zipped)
    print(list(x)) 
    # Выведет: [1, 2, 3]
    print(list(y)) 
            # Выведет: [4, 5, 6]
    """
    return strings_positions

string_list_ = [
    'У лукоморья дуб зелёный;',
    'Златая цепь на дубе том:',
    'И днём и ночью кот учёный',
    'Всё ходит по цепи кругом;',
    'Идёт направо — песнь заводит,',
    'Налево — сказку говорит.',
    'Там чудеса: там леший бродит,',
    'Русалка на ветвях сидит;'
    ]

result = custom_write('test.txt', string_list_)
print('')
for elem in result.items():
    print(elem)
print(f'*******************************************\n {result}')
for item in result:
    print(f' строки:  {item}\t->  {result[item]}')